{"componentChunkName":"component---src-templates-doxygen-article-tsx","path":"/docs/api/graph_legend.html","result":{"pageContext":{"title":"Graph Legend","rawHtml":"<div id=\"top\"><!-- do not remove this div, it is closed by doxygen! -->\n<!-- Generated by Doxygen 1.8.20 -->\n  <div id=\"navrow1\" class=\"tabs\">\n    <ul class=\"tablist\">\n      <li><a href=\"index.html\"><span>Main&#160;Page</span></a></li>\n      <li><a href=\"pages.html\"><span>Related&#160;Pages</span></a></li>\n      <li><a href=\"namespaces.html\"><span>Namespaces</span></a></li>\n      <li><a href=\"annotated.html\"><span>Classes</span></a></li>\n      <li><a href=\"files.html\"><span>Files</span></a></li>\n    </ul>\n  </div>\n</div><!-- top -->\n<div class=\"header\">\n  <div class=\"headertitle\">\n<div class=\"title\">Graph Legend</div>  </div>\n</div><!--header-->\n<div class=\"contents\">\n<p>This page explains how to interpret the graphs that are generated by doxygen.</p>\n<p>Consider the following example: </p><div class=\"fragment\"><div class=\"line\"><span class=\"comment\">/*! Invisible class because of truncation */</span></div>\n<div class=\"line\"><span class=\"keyword\">class </span>Invisible { };</div>\n<div class=\"line\"><span class=\"comment\"></span> </div>\n<div class=\"line\"><span class=\"comment\">/*! Truncated class, inheritance relation is hidden */</span></div>\n<div class=\"line\"><span class=\"keyword\">class </span>Truncated : <span class=\"keyword\">public</span> Invisible { };</div>\n<div class=\"line\"> </div>\n<div class=\"line\"><span class=\"comment\">/* Class not documented with doxygen comments */</span></div>\n<div class=\"line\"><span class=\"keyword\">class </span>Undocumented { };</div>\n<div class=\"line\"><span class=\"comment\"></span> </div>\n<div class=\"line\"><span class=\"comment\">/*! Class that is inherited using public inheritance */</span></div>\n<div class=\"line\"><span class=\"keyword\">class </span>PublicBase : <span class=\"keyword\">public</span> Truncated { };</div>\n<div class=\"line\"><span class=\"comment\"></span> </div>\n<div class=\"line\"><span class=\"comment\">/*! A template class */</span></div>\n<div class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">class</span> T&gt; <span class=\"keyword\">class </span>Templ { };</div>\n<div class=\"line\"><span class=\"comment\"></span> </div>\n<div class=\"line\"><span class=\"comment\">/*! Class that is inherited using protected inheritance */</span></div>\n<div class=\"line\"><span class=\"keyword\">class </span>ProtectedBase { };</div>\n<div class=\"line\"><span class=\"comment\"></span> </div>\n<div class=\"line\"><span class=\"comment\">/*! Class that is inherited using private inheritance */</span></div>\n<div class=\"line\"><span class=\"keyword\">class </span>PrivateBase { };</div>\n<div class=\"line\"><span class=\"comment\"></span> </div>\n<div class=\"line\"><span class=\"comment\">/*! Class that is used by the Inherited class */</span></div>\n<div class=\"line\"><span class=\"keyword\">class </span>Used { };</div>\n<div class=\"line\"><span class=\"comment\"></span> </div>\n<div class=\"line\"><span class=\"comment\">/*! Super class that inherits a number of other classes */</span></div>\n<div class=\"line\"><span class=\"keyword\">class </span>Inherited : <span class=\"keyword\">public</span> PublicBase,</div>\n<div class=\"line\">                  <span class=\"keyword\">protected</span> ProtectedBase,</div>\n<div class=\"line\">                  <span class=\"keyword\">private</span> PrivateBase,</div>\n<div class=\"line\">                  <span class=\"keyword\">public</span> Undocumented,</div>\n<div class=\"line\">                  <span class=\"keyword\">public</span> Templ&lt;int&gt;</div>\n<div class=\"line\">{</div>\n<div class=\"line\">  <span class=\"keyword\">private</span>:</div>\n<div class=\"line\">    Used *m_usedClass;</div>\n<div class=\"line\">};</div>\n</div><!-- fragment --><p> This will result in the following graph:</p>\n<center><img src=\"graph_legend.png\" alt=\"\" class=\"inline\"/></center><p>The boxes in the above graph have the following meaning: </p>\n<ul>\n<li>\nA filled gray box represents the struct or class for which the graph is generated. </li>\n<li>\nA box with a black border denotes a documented struct or class. </li>\n<li>\nA box with a gray border denotes an undocumented struct or class. </li>\n<li>\nA box with a red border denotes a documented struct or class forwhich not all inheritance/containment relations are shown. A graph is truncated if it does not fit within the specified boundaries. </li>\n</ul>\n<p>The arrows have the following meaning: </p>\n<ul>\n<li>\nA dark blue arrow is used to visualize a public inheritance relation between two classes. </li>\n<li>\nA dark green arrow is used for protected inheritance. </li>\n<li>\nA dark red arrow is used for private inheritance. </li>\n<li>\nA purple dashed arrow is used if a class is contained or used by another class. The arrow is labelled with the variable(s) through which the pointed class or struct is accessible. </li>\n<li>\nA yellow dashed arrow denotes a relation between a template instance and the template class it was instantiated from. The arrow is labelled with the template parameters of the instance. </li>\n</ul>\n</div><!-- contents -->\n"}},"staticQueryHashes":["3649515864","63159454"]}