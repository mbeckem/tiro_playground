{"parents": [], "prev": {"link": "../api/", "title": "api.h"}, "next": {"link": "../def/", "title": "def.h"}, "title": "compiler.h", "meta": {}, "body": "<div class=\"section\" id=\"compiler-h\">\n<h1>compiler.h<a class=\"headerlink\" href=\"#compiler-h\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"highlight-cpp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&quot;tiro/compiler.h&quot;</span><span class=\"cp\"></span>\n</pre></div>\n</div>\n<div class=\"breathe-sectiondef docutils container\">\n<p class=\"breathe-sectiondef-title rubric\">Typedefs</p>\n<dl class=\"c type\">\n<dt id=\"c.tiro_severity_t\">\n<span class=\"target\" id=\"compiler_8h_1a5e694b14d4981e2b7cc7a0dd37f6efe5\"></span><em class=\"property\">typedef </em><em class=\"property\">enum</em> <a class=\"reference internal\" href=\"#c.tiro_severity\" title=\"tiro_severity\">tiro_severity</a> <code class=\"sig-name descname\">tiro_severity_t</code><a class=\"headerlink\" href=\"#c.tiro_severity_t\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Defines the possible values for the severity of diagnostic compiler messages. </p>\n</dd></dl>\n\n<dl class=\"c type\">\n<dt id=\"c.tiro_compiler_settings_t\">\n<span class=\"target\" id=\"compiler_8h_1aff3724e3be84421f10a808501d2d0502\"></span><em class=\"property\">typedef </em><em class=\"property\">struct</em> <a class=\"reference internal\" href=\"#c.tiro_compiler_settings\" title=\"tiro_compiler_settings\">tiro_compiler_settings</a> <code class=\"sig-name descname\">tiro_compiler_settings_t</code><a class=\"headerlink\" href=\"#c.tiro_compiler_settings_t\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>An instance of this type can be passed to the compiler to configure it. </p>\n<p>Use tiro_compiler_settings_init to initialize this struct to default values. </p>\n</dd></dl>\n\n</div>\n<div class=\"breathe-sectiondef docutils container\">\n<p class=\"breathe-sectiondef-title rubric\">Enums</p>\n<dl class=\"c enum\">\n<dt id=\"c.tiro_severity\">\n<span class=\"target\" id=\"compiler_8h_1aa55ea5c1c9571c111cf300c1867498fa\"></span><em class=\"property\">enum </em><code class=\"sig-name descname\">tiro_severity</code><a class=\"headerlink\" href=\"#c.tiro_severity\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Defines the possible values for the severity of diagnostic compiler messages. </p>\n<p><em>Values:</em></p>\n<dl class=\"c enumerator\">\n<dt id=\"c.tiro_severity.TIRO_SEVERITY_WARNING\">\n<span class=\"target\" id=\"compiler_8h_1aa55ea5c1c9571c111cf300c1867498faa6c0ea2c5637a6a3d62959740af67ec2d\"></span><em class=\"property\">enumerator </em><code class=\"sig-name descname\">TIRO_SEVERITY_WARNING</code><a class=\"headerlink\" href=\"#c.tiro_severity.TIRO_SEVERITY_WARNING\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>A compiler warning. </p>\n</dd></dl>\n\n<dl class=\"c enumerator\">\n<dt id=\"c.tiro_severity.TIRO_SEVERITY_ERROR\">\n<span class=\"target\" id=\"compiler_8h_1aa55ea5c1c9571c111cf300c1867498faab27446a5ead4ff36020db51bf22d505c\"></span><em class=\"property\">enumerator </em><code class=\"sig-name descname\">TIRO_SEVERITY_ERROR</code><a class=\"headerlink\" href=\"#c.tiro_severity.TIRO_SEVERITY_ERROR\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>A compiler error (compilation fails) </p>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"breathe-sectiondef docutils container\">\n<p class=\"breathe-sectiondef-title rubric\">Functions</p>\n<dl class=\"c function\">\n<dt id=\"c.tiro_severity_str\">\n<span class=\"target\" id=\"compiler_8h_1af10fd409e1ec1a3292f152264471f745\"></span><em class=\"property\">const</em> char *<code class=\"sig-name descname\">tiro_severity_str</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#c.tiro_severity_t\" title=\"tiro_severity_t\">tiro_severity_t</a> <em>severity</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_severity_str\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Returns the string representation of the given severity value. </p>\n<p>The returned string is allocated in static storage and MUST NOT be freed. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_compiler_settings_init\">\n<span class=\"target\" id=\"compiler_8h_1a424de43f0dc8ea722262e26e5def2bd4\"></span>void <code class=\"sig-name descname\">tiro_compiler_settings_init</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#c.tiro_compiler_settings_t\" title=\"tiro_compiler_settings_t\">tiro_compiler_settings_t</a> *<em>settings</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_compiler_settings_init\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Initializes the given compiler settings object with default values. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_compiler_new\">\n<span class=\"target\" id=\"compiler_8h_1a2b896d30cd3b792b2998f1b5b2f4f1e4\"></span><a class=\"reference internal\" href=\"../def/#c.tiro_compiler_t\" title=\"tiro_compiler_t\">tiro_compiler_t</a> <code class=\"sig-name descname\">tiro_compiler_new</code><span class=\"sig-paren\">(</span><em class=\"property\">const</em> <a class=\"reference internal\" href=\"#c.tiro_compiler_settings_t\" title=\"tiro_compiler_settings_t\">tiro_compiler_settings_t</a> *<em>settings</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_compiler_new\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Allocates a new compiler instance. </p>\n<p>A compiler can be used to compile a set of source files into a module. Warnings or errors emitted during compilation can be observed through the <code class=\"docutils literal notranslate\"><span class=\"pre\">settings-&gt;message_callback</span></code> function.</p>\n<p><p>FIXME: Currently only works for a single source files, implement _add api. </p>\n<dl class=\"simple\">\n<dt><strong>Parameters</strong></dt><dd><ul class=\"breatheparameterlist simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">settings</span></code>: The compiler settings (optional). Default values will be used if this parameter is NULL.</p></li>\n</ul>\n</dd>\n</dl>\n</p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_compiler_free\">\n<span class=\"target\" id=\"compiler_8h_1af130183104b24d7b09c7654df043b53e\"></span>void <code class=\"sig-name descname\">tiro_compiler_free</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_compiler_t\" title=\"tiro_compiler_t\">tiro_compiler_t</a> <em>compiler</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_compiler_free\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Destroys and frees the given compiler instance. </p>\n<p>Must be called exactly once for every instance created via <code class=\"docutils literal notranslate\"><span class=\"pre\">tiro_compiler_new</span></code> in order to avoid resource leaks. Does nothing if <code class=\"docutils literal notranslate\"><span class=\"pre\">compiler</span></code> is NULL. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_compiler_add_file\">\n<span class=\"target\" id=\"compiler_8h_1a02846ac66d7f6907c9861dc8e1d17cde\"></span>void <code class=\"sig-name descname\">tiro_compiler_add_file</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_compiler_t\" title=\"tiro_compiler_t\">tiro_compiler_t</a> <em>compiler</em>, <em class=\"property\">const</em> char *<em>file_name</em>, <em class=\"property\">const</em> char *<em>file_content</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_compiler_add_file\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Add a source file to the compiler. </p>\n<p>Can only be called before compilation started.</p>\n<p>FIXME: Can only be called for a single source file as of now. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_compiler_run\">\n<span class=\"target\" id=\"compiler_8h_1a97243775c2d9f51e5f2dc34b2e8c3e7d\"></span>void <code class=\"sig-name descname\">tiro_compiler_run</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_compiler_t\" title=\"tiro_compiler_t\">tiro_compiler_t</a> <em>compiler</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_compiler_run\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Run the compiler on the set of source files provided via <code class=\"docutils literal notranslate\"><span class=\"pre\">tiro_compiler_add_file</span></code>. </p>\n<p>Requires at least once source file. This function can only be called once for every compiler instance.</p>\n<p>Returns an error if the compilation fails. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_compiler_has_module\">\n<span class=\"target\" id=\"compiler_8h_1a4bf72c8eed2970e2415cf282da1728e8\"></span>bool <code class=\"sig-name descname\">tiro_compiler_has_module</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_compiler_t\" title=\"tiro_compiler_t\">tiro_compiler_t</a> <em>compiler</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_compiler_has_module\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Returns true if this compiler has successfully compiled a set of source files and produced a bytecode module. </p>\n<p>In order for this function to return true, a previous call to <code class=\"docutils literal notranslate\"><span class=\"pre\">tiro_compiler_run</span></code> must have returned <code class=\"docutils literal notranslate\"><span class=\"pre\">TIRO_OK</span></code> and the compiler must have beeen configured to actually produce a module. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_compiler_take_module\">\n<span class=\"target\" id=\"compiler_8h_1a93714907d8abbe3e266997da69ac42eb\"></span>void <code class=\"sig-name descname\">tiro_compiler_take_module</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_compiler_t\" title=\"tiro_compiler_t\">tiro_compiler_t</a> <em>compiler</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_module_t\" title=\"tiro_module_t\">tiro_module_t</a> *<em>module</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_compiler_take_module\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Extracts the compiled module from the compiler and returns it. </p>\n<p>On success, the module will be placed into the location specified by <code class=\"docutils literal notranslate\"><span class=\"pre\">module</span></code>, which must not be NULL. If a module was returned, it must be freed by calling <code class=\"docutils literal notranslate\"><span class=\"pre\">tiro_module_free</span></code>.</p>\n<p>This function fails if <code class=\"docutils literal notranslate\"><span class=\"pre\">tiro_compiler_has_module</span></code> returns false. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_compiler_dump_ast\">\n<span class=\"target\" id=\"compiler_8h_1ad9bf258b87be5df4201ace618922c709\"></span>void <code class=\"sig-name descname\">tiro_compiler_dump_ast</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_compiler_t\" title=\"tiro_compiler_t\">tiro_compiler_t</a> <em>compiler</em>, char **<em>string</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_compiler_dump_ast\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Returns the string representation of the AST. </p>\n<p>Can only be called after <code class=\"docutils literal notranslate\"><span class=\"pre\">tiro_compiler_run</span></code> has been executed. The compile process can have failed; a somewhat useful AST can often still be produced.</p>\n<p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">TIRO_ERROR_BAD_STATE</span></code> if the compiler cannot produce the AST.</p>\n<p>Otherwise, this function returns <code class=\"docutils literal notranslate\"><span class=\"pre\">TIRO_OK</span></code> and returns a new string using the provided output parameter. The string must be passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">free</span></code> to release memory. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_compiler_dump_ir\">\n<span class=\"target\" id=\"compiler_8h_1a122b23570c84904984581d6b038f22a0\"></span>void <code class=\"sig-name descname\">tiro_compiler_dump_ir</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_compiler_t\" title=\"tiro_compiler_t\">tiro_compiler_t</a> <em>compiler</em>, char **<em>string</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_compiler_dump_ir\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Returns the string representation of the internal representation immediately before code generation. </p>\n<p>Can only be called after <code class=\"docutils literal notranslate\"><span class=\"pre\">tiro_compiler_run</span></code> has been executed successfully.</p>\n<p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">TIRO_ERROR_BAD_STATE</span></code> if the compiler cannot produce the internal representation.</p>\n<p>Otherwise, this function returns <code class=\"docutils literal notranslate\"><span class=\"pre\">TIRO_OK</span></code> and returns a new string using the provided output parameter. The string must be passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">free</span></code> to release memory. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_compiler_dump_bytecode\">\n<span class=\"target\" id=\"compiler_8h_1a5a34d02c45e96f5146f9aa9c1d891ba8\"></span>void <code class=\"sig-name descname\">tiro_compiler_dump_bytecode</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_compiler_t\" title=\"tiro_compiler_t\">tiro_compiler_t</a> <em>compiler</em>, char **<em>string</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_compiler_dump_bytecode\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Returns the string representation of the compiled bytecode module. </p>\n<p>Can only be called after <code class=\"docutils literal notranslate\"><span class=\"pre\">tiro_compiler_run</span></code> has been executed successfully.</p>\n<p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">TIRO_ERROR_BAD_STATE</span></code> if the compiler cannot produce the disassembled output.</p>\n<p>Otherwise, this function returns <code class=\"docutils literal notranslate\"><span class=\"pre\">TIRO_OK</span></code> and returns a new string using the provided output parameter. The string must be passed to <code class=\"docutils literal notranslate\"><span class=\"pre\">free</span></code> to release memory. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_module_free\">\n<span class=\"target\" id=\"compiler_8h_1a98302f876b73686583021876ca69e17b\"></span>void <code class=\"sig-name descname\">tiro_module_free</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_module_t\" title=\"tiro_module_t\">tiro_module_t</a> <em>module</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_module_free\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Free a module. </p>\n<p>Must be called exactly once for every created module.</p>\n<p>Does nothing if <code class=\"docutils literal notranslate\"><span class=\"pre\">module</span></code> is NULL. </p>\n</dd></dl>\n\n</div>\n<dl class=\"c struct\">\n<dt id=\"c.tiro_compiler_settings\">\n<span class=\"target\" id=\"structtiro__compiler__settings\"></span><em class=\"property\">struct </em><code class=\"sig-name descname\">tiro_compiler_settings</code><a class=\"headerlink\" href=\"#c.tiro_compiler_settings\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><em>#include \u201ctiro/compiler.h\u201d</em><p>An instance of this type can be passed to the compiler to configure it. </p>\n<p>Use tiro_compiler_settings_init to initialize this struct to default values. </p>\n<div class=\"breathe-sectiondef docutils container\">\n<p class=\"breathe-sectiondef-title rubric\">Public Members</p>\n<dl class=\"c var\">\n<dt id=\"c.tiro_compiler_settings.enable_dump_ast\">\n<span class=\"target\" id=\"structtiro__compiler__settings_1ab2b0958c86048a4683e27ff358047b85\"></span>bool <code class=\"sig-name descname\">enable_dump_ast</code><a class=\"headerlink\" href=\"#c.tiro_compiler_settings.enable_dump_ast\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd></dd></dl>\n\n<dl class=\"c var\">\n<dt id=\"c.tiro_compiler_settings.enable_dump_ir\">\n<span class=\"target\" id=\"structtiro__compiler__settings_1a6ee5528d3584e410964695b12c857d94\"></span>bool <code class=\"sig-name descname\">enable_dump_ir</code><a class=\"headerlink\" href=\"#c.tiro_compiler_settings.enable_dump_ir\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd></dd></dl>\n\n<dl class=\"c var\">\n<dt id=\"c.tiro_compiler_settings.enable_dump_bytecode\">\n<span class=\"target\" id=\"structtiro__compiler__settings_1a4dd8b39badb16113c8da05a1558a2f2b\"></span>bool <code class=\"sig-name descname\">enable_dump_bytecode</code><a class=\"headerlink\" href=\"#c.tiro_compiler_settings.enable_dump_bytecode\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd></dd></dl>\n\n<dl class=\"c var\">\n<dt id=\"c.tiro_compiler_settings.message_callback_data\">\n<span class=\"target\" id=\"structtiro__compiler__settings_1a640cc522819571f267ce0850e355efce\"></span>void *<code class=\"sig-name descname\">message_callback_data</code><a class=\"headerlink\" href=\"#c.tiro_compiler_settings.message_callback_data\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd></dd></dl>\n\n<dl class=\"c var\">\n<dt id=\"c.tiro_compiler_settings.message_callback\">\n<span class=\"target\" id=\"structtiro__compiler__settings_1aa9a7e252e336283affe40fc705121d68\"></span>void (*<code class=\"sig-name descname\">message_callback</code>)<span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#c.tiro_severity_t\" title=\"tiro_severity_t\">tiro_severity_t</a> severity, uint32_t line, uint32_t column, <em class=\"property\">const</em> char *message, void *userdata<span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_compiler_settings.message_callback\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd></dd></dl>\n\n</div>\n</dd></dl>\n\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["tiro/def", "def.h", "N", "next"], ["tiro/api", "api.h", "P", "previous"]], "sourcename": "tiro/compiler.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">compiler.h</a></li>\n</ul>\n", "display_toc": false, "page_source_suffix": ".rst", "current_page_name": "tiro/compiler", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "customsidebar": null, "alabaster_version": "0.7.12"}