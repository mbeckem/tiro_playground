{"parents": [], "prev": {"link": "../version/", "title": "version.h"}, "next": null, "title": "vm.h", "meta": {}, "body": "<div class=\"section\" id=\"vm-h\">\n<h1>vm.h<a class=\"headerlink\" href=\"#vm-h\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"highlight-cpp notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"cp\">#include</span> <span class=\"cpf\">&quot;tiro/vm.h&quot;</span><span class=\"cp\"></span>\n</pre></div>\n</div>\n<div class=\"breathe-sectiondef docutils container\">\n<p class=\"breathe-sectiondef-title rubric\">Typedefs</p>\n<dl class=\"c type\">\n<dt id=\"c.tiro_vm_settings_t\">\n<span class=\"target\" id=\"vm_8h_1a9f18ff1e1476c3c141c87d1833f908a5\"></span><em class=\"property\">typedef </em><em class=\"property\">struct</em> <a class=\"reference internal\" href=\"#c.tiro_vm_settings\" title=\"tiro_vm_settings\">tiro_vm_settings</a> <code class=\"sig-name descname\">tiro_vm_settings_t</code><a class=\"headerlink\" href=\"#c.tiro_vm_settings_t\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>The <a class=\"reference internal\" href=\"#structtiro__vm__settings\"><span class=\"std std-ref\">tiro_vm_settings</span></a> structure can be provided to <code class=\"docutils literal notranslate\"><span class=\"pre\">tiro_vm_new</span></code> as a configuration parameter. </p>\n<p>Use tiro_vm_settings_init to initialize this struct to default values. </p>\n</dd></dl>\n\n</div>\n<div class=\"breathe-sectiondef docutils container\">\n<p class=\"breathe-sectiondef-title rubric\">Functions</p>\n<dl class=\"c function\">\n<dt id=\"c.tiro_vm_settings_init\">\n<span class=\"target\" id=\"vm_8h_1a02dfec68f6de3e880da0d84663229332\"></span>void <code class=\"sig-name descname\">tiro_vm_settings_init</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"#c.tiro_vm_settings_t\" title=\"tiro_vm_settings_t\">tiro_vm_settings_t</a> *<em>settings</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_vm_settings_init\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Initializes the given tiro settings object with default values. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_vm_new\">\n<span class=\"target\" id=\"vm_8h_1a32b2cfc858a63d3f7af8bbebe72df091\"></span><a class=\"reference internal\" href=\"../def/#c.tiro_vm_t\" title=\"tiro_vm_t\">tiro_vm_t</a> <code class=\"sig-name descname\">tiro_vm_new</code><span class=\"sig-paren\">(</span><em class=\"property\">const</em> <a class=\"reference internal\" href=\"#c.tiro_vm_settings_t\" title=\"tiro_vm_settings_t\">tiro_vm_settings_t</a> *<em>settings</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_vm_new\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Allocates a new virtual machine instance. </p>\n<p>Reads settings from the given <code class=\"docutils literal notranslate\"><span class=\"pre\">settings</span></code> objects, if it is not NULL. Otherwise uses default values.</p>\n<p>Returns NULL on allocation failure. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_vm_free\">\n<span class=\"target\" id=\"vm_8h_1a42c6a6ee0f142b104e1290f88dc16fcc\"></span>void <code class=\"sig-name descname\">tiro_vm_free</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_vm_t\" title=\"tiro_vm_t\">tiro_vm_t</a> <em>vm</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_vm_free\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Free a virtual machine. </p>\n<p>Must be called exactly once for every vm created with <code class=\"docutils literal notranslate\"><span class=\"pre\">tiro_vm_new</span></code>.</p>\n<p>Does nothing if <code class=\"docutils literal notranslate\"><span class=\"pre\">vm</span></code> is NULL. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_vm_userdata\">\n<span class=\"target\" id=\"vm_8h_1a1a76dacd02c8845ddaa3277734844bf2\"></span>void *<code class=\"sig-name descname\">tiro_vm_userdata</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_vm_t\" title=\"tiro_vm_t\">tiro_vm_t</a> <em>vm</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_vm_userdata\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Returns the userdata pointer that was passed in the settings struct during vm construction. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_vm_load_std\">\n<span class=\"target\" id=\"vm_8h_1a6e066ba247cc439afcd3e28e2b93eeb1\"></span>void <code class=\"sig-name descname\">tiro_vm_load_std</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_vm_t\" title=\"tiro_vm_t\">tiro_vm_t</a> <em>vm</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_vm_load_std\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Load the default modules provided by the runtime. </p>\n<p>TODO: Configuration? </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_vm_load_bytecode\">\n<span class=\"target\" id=\"vm_8h_1a71c30baddda3d7a921d7e8b0e7b3b365\"></span>void <code class=\"sig-name descname\">tiro_vm_load_bytecode</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_vm_t\" title=\"tiro_vm_t\">tiro_vm_t</a> <em>vm</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_module_t\" title=\"tiro_module_t\">tiro_module_t</a> <em>module</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_vm_load_bytecode\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Loads the compiled module into the virtual machine. </p>\n<p>Note: this function does <em>not</em> take ownership of the module parameter. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_vm_load_module\">\n<span class=\"target\" id=\"vm_8h_1a909e6f1bdd9436bed3bbce8c621a8e8f\"></span>void <code class=\"sig-name descname\">tiro_vm_load_module</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_vm_t\" title=\"tiro_vm_t\">tiro_vm_t</a> <em>vm</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_handle_t\" title=\"tiro_handle_t\">tiro_handle_t</a> <em>module</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_vm_load_module\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Loads the given module object into the virtual machine. </p>\n<p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">TIRO_ERROR_MODULE_EXISTS</span></code> if a module with the same name already exists. Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">TIRO_ERROR_BAD_TYPE</span></code> if the argument is not actually a module. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_vm_get_export\">\n<span class=\"target\" id=\"vm_8h_1aac5527995033a178347c35a7ddc479c3\"></span>void <code class=\"sig-name descname\">tiro_vm_get_export</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_vm_t\" title=\"tiro_vm_t\">tiro_vm_t</a> <em>vm</em>, <em class=\"property\">const</em> char *<em>module_name</em>, <em class=\"property\">const</em> char *<em>function_name</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_handle_t\" title=\"tiro_handle_t\">tiro_handle_t</a> <em>result</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_vm_get_export\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Attempts to find the exported value with the given name in the specified module. </p>\n<p>The found function value will be stored in the <code class=\"docutils literal notranslate\"><span class=\"pre\">result</span></code> handle, which must not be NULL.</p>\n<p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">TIRO_ERROR_MODULE_NOT_FOUND</span></code> if the specified module was not loaded. Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">TIRO_ERROR_EXPORT_NOT_FOUND</span></code> if the module does not contain an exported member with that name. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_vm_call\">\n<span class=\"target\" id=\"vm_8h_1a0fc2a3db81e623bc20f138f25d9c53b7\"></span>void <code class=\"sig-name descname\">tiro_vm_call</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_vm_t\" title=\"tiro_vm_t\">tiro_vm_t</a> <em>vm</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_handle_t\" title=\"tiro_handle_t\">tiro_handle_t</a> <em>function</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_handle_t\" title=\"tiro_handle_t\">tiro_handle_t</a> <em>arguments</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_handle_t\" title=\"tiro_handle_t\">tiro_handle_t</a> <em>result</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_vm_call\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Calls the given function and places the function\u2019s return value into <code class=\"docutils literal notranslate\"><span class=\"pre\">result</span></code> (if present). </p>\n<p>FIXME: Remove this, calling must be async. FIXME: Implement convenience function for async call that creates and runs a coroutine, including a result callback.</p>\n<p><dl class=\"simple\">\n<dt><strong>Parameters</strong></dt><dd><ul class=\"breatheparameterlist simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">vm</span></code>: The virtual machine instance. </p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">function</span></code>: The function to call. Must not be NULL. </p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">arguments</span></code>: The function call arguments. Must be a tuple if arguments shall be passed, or a null value or NULL pointer to indicate zero arguments. </p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">result</span></code>: A handle in which the function\u2019s return value will be placed. Can be NULL. </p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">err</span></code>: An optional error handle for detailed error information. </p></li>\n</ul>\n</dd>\n</dl>\n</p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_vm_run_ready\">\n<span class=\"target\" id=\"vm_8h_1abad4300ef3847662575fc2d360fe95aa\"></span>void <code class=\"sig-name descname\">tiro_vm_run_ready</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_vm_t\" title=\"tiro_vm_t\">tiro_vm_t</a> <em>vm</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_vm_run_ready\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Runs all ready coroutines. </p>\n<p>Returns (and does not block) when all coroutines are either waiting or done. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_vm_has_ready\">\n<span class=\"target\" id=\"vm_8h_1a1008eadc2d840c86fccc809c89154bfd\"></span>bool <code class=\"sig-name descname\">tiro_vm_has_ready</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_vm_t\" title=\"tiro_vm_t\">tiro_vm_t</a> <em>vm</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_vm_has_ready\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Returns true if the virtual machine has at least one coroutine ready for execution, false otherwise. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_global_new\">\n<span class=\"target\" id=\"vm_8h_1a6578f7f6e77ee0a6d129d172406e8f74\"></span><a class=\"reference internal\" href=\"../def/#c.tiro_handle_t\" title=\"tiro_handle_t\">tiro_handle_t</a> <code class=\"sig-name descname\">tiro_global_new</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_vm_t\" title=\"tiro_vm_t\">tiro_vm_t</a> <em>vm</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_error_t\" title=\"tiro_error_t\">tiro_error_t</a> *<em>err</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_global_new\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Allocates a new global handle. </p>\n<p>Global handles point to a single rooted object slot that can hold an arbitrary value. Slots are always initialized to null.</p>\n<p>When a global handle is no longer required, it should be freed by calling <code class=\"docutils literal notranslate\"><span class=\"pre\">tiro_global_free</span></code>.</p>\n<p>Returns NULL on allocation failure. </p>\n</dd></dl>\n\n<dl class=\"c function\">\n<dt id=\"c.tiro_global_free\">\n<span class=\"target\" id=\"vm_8h_1ae7a4ad9fe5662fa5d99f2ffe4c0f9050\"></span>void <code class=\"sig-name descname\">tiro_global_free</code><span class=\"sig-paren\">(</span><a class=\"reference internal\" href=\"../def/#c.tiro_vm_t\" title=\"tiro_vm_t\">tiro_vm_t</a> <em>vm</em>, <a class=\"reference internal\" href=\"../def/#c.tiro_handle_t\" title=\"tiro_handle_t\">tiro_handle_t</a> <em>global</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_global_free\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Frees a global handle allocated with <code class=\"docutils literal notranslate\"><span class=\"pre\">tiro_global_new</span></code>. </p>\n<p>Note: remaining globals are automatically freed when a vm is freed. </p>\n</dd></dl>\n\n</div>\n<dl class=\"c struct\">\n<dt id=\"c.tiro_vm_settings\">\n<span class=\"target\" id=\"structtiro__vm__settings\"></span><em class=\"property\">struct </em><code class=\"sig-name descname\">tiro_vm_settings</code><a class=\"headerlink\" href=\"#c.tiro_vm_settings\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><em>#include \u201ctiro/vm.h\u201d</em><p>The <a class=\"reference internal\" href=\"#structtiro__vm__settings\"><span class=\"std std-ref\">tiro_vm_settings</span></a> structure can be provided to <code class=\"docutils literal notranslate\"><span class=\"pre\">tiro_vm_new</span></code> as a configuration parameter. </p>\n<p>Use tiro_vm_settings_init to initialize this struct to default values. </p>\n<div class=\"breathe-sectiondef docutils container\">\n<p class=\"breathe-sectiondef-title rubric\">Public Members</p>\n<dl class=\"c var\">\n<dt id=\"c.tiro_vm_settings.userdata\">\n<span class=\"target\" id=\"structtiro__vm__settings_1a6a5f3abfbea4d62d2a7db357293dcbc6\"></span>void *<code class=\"sig-name descname\">userdata</code><a class=\"headerlink\" href=\"#c.tiro_vm_settings.userdata\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>Arbitrary user data that will be accessible by calling <code class=\"docutils literal notranslate\"><a class=\"reference internal\" href=\"#vm_8h_1a1a76dacd02c8845ddaa3277734844bf2\"><span class=\"std std-ref\"><span class=\"pre\">tiro_vm_userdata()</span></span></a></code>. </p>\n<p>This value is never interpreted in any way. This value is NULL by default. </p>\n</dd></dl>\n\n<dl class=\"c var\">\n<dt id=\"c.tiro_vm_settings.print_stdout\">\n<span class=\"target\" id=\"structtiro__vm__settings_1a60f31fae92ee4a9fbb24982265c535e6\"></span>void (*<code class=\"sig-name descname\">print_stdout</code>)<span class=\"sig-paren\">(</span><em class=\"property\">const</em> char *message, size_t size, void *userdata<span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#c.tiro_vm_settings.print_stdout\" title=\"Permalink to this definition\">\u00b6</a><br /></dt>\n<dd><p>This callback is invoked when the vm attempts to print to the standard output stream, for example when <code class=\"docutils literal notranslate\"><span class=\"pre\">std.print(...)</span></code> has been called. </p>\n<p>When this is set to NULL (the default), the message will be printed to the process\u2019s standard output.</p>\n<p><dl class=\"simple\">\n<dt><strong>Parameters</strong></dt><dd><ul class=\"breatheparameterlist simple\">\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">message</span></code>: The string to print. Not guaranteed to be null terminated. </p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">size</span></code>: The size (in bytes) of the message string. </p></li>\n<li><p><code class=\"docutils literal notranslate\"><span class=\"pre\">userdata</span></code>: The userdata pointer set in this settings instance. </p></li>\n</ul>\n</dd>\n</dl>\n</p>\n</dd></dl>\n\n</div>\n</dd></dl>\n\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["tiro/version", "version.h", "P", "previous"]], "sourcename": "tiro/vm.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">vm.h</a></li>\n</ul>\n", "display_toc": false, "page_source_suffix": ".rst", "current_page_name": "tiro/vm", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}