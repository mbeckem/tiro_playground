{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.61bca81a8935113cdfd3.hot-update.js","sources":["webpack:///./src/runtime/impl.ts"],"sourcesContent":["import nativeTiro from \"@lib/tiro\";\nimport nativeTiroWasmURL from \"@lib/tiro.wasm\";\nimport { CompilationResult, ExecutionResult, Runtime } from \"./interfaces\";\n\nexport async function createRuntime(): Promise<Runtime> {\n    if (typeof window === \"undefined\") {\n        throw new Error(\"Cannot compile server side.\");\n    }\n\n    const { nativeTiro } = await loadTiro();\n    const runtime = new nativeTiro.TiroRuntime();\n    return new RuntimeImpl(runtime);\n}\n\nclass RuntimeImpl implements Runtime {\n    private _nativeRuntime: any;\n    constructor(nativeRuntime: any) {\n        this._nativeRuntime = nativeRuntime;\n    }\n\n    destroy(): void {\n        if (this._nativeRuntime) {\n            this._nativeRuntime.delete();\n            this._nativeRuntime = undefined;\n        }\n    }\n\n    compile(source: string): CompilationResult {\n        this._checkDestroyed();\n\n        const start = new Date();\n        const input = JSON.stringify({ source });\n        const output = JSON.parse(this._nativeRuntime.compile(input));\n        output.elapsedMillis = new Date().getTime() - start.getTime();\n        return output as CompilationResult;\n    }\n\n    run(functionName: string): ExecutionResult {\n        this._checkDestroyed();\n\n        const start = new Date();\n        const input = JSON.stringify({ function: functionName });\n        const output = JSON.parse(this._nativeRuntime.run(input));\n        output.elapsedMillis = new Date().getTime() - start.getTime();\n        return output as ExecutionResult;\n    }\n\n    private _checkDestroyed(): void {\n        if (!this._nativeRuntime)\n            throw new Error(\"Tiro compiler was already destroyed.\");\n    }\n}\n\n// Lazily loaded\nlet tiroWasm: any = undefined;\n\nfunction loadTiro(): Promise<{ nativeTiro: any }> {\n    return new Promise((resolve, reject) => {\n        const instance = nativeTiro({\n            noInitialRun: true,\n            noExitRuntime: true,\n            locateFile(file: any) {\n                if (file === \"tiro.wasm\") {\n                    return nativeTiroWasmURL;\n                }\n                throw new Error(\n                    `Unknown file requested by WebAssembly module: '${file}'.`\n                );\n            },\n            onAbort() {\n                reject(\"Native tiro module aborted.\");\n            },\n            onRuntimeInitialized() {\n                // Must not resolve with the instance itself. It has a \"then\" function\n                // but is *NOT* a promise (-> infinite loop).\n                resolve({\n                    nativeTiro: instance,\n                });\n            },\n        });\n    });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAKA;AACA;AANA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;;;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;;;;AAGA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AApBA;AAsBA;AACA;;;;A","sourceRoot":""}